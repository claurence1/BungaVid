openapi: 3.0.2
info:
  title: BungaTV
  description: 'Plateforme de location de film en ligne.'
  termsOfService: https://bunga.tv/terms/
  contact:
    email: api@bunga.tv
  license:
    name: NodeJS 2.0
    url: https://github.com/nodejs/node/blob/master/LICENSE
  version: 1.0.0
servers:
- url: https://bunga.tv/v1
tags:
- name: film
  description: Tout ce qui concerne un film
- name: location d'un film
  description: Tout ce qui concerne la location d'un film
- name: user
  description: Tout ce qui concerne un utilisateur
paths:
  /film:
    get:
      tags:
      - film
      summary: Liste de tout les films de la plateforme
      operationId: filmsGet
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: "Nombre d'éléments à ignorer avant de commencer à collecter l'ensemble de résultats."
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: Le nombre de film à retourner.
      responses:
        200:
          description: Opération réussi
        400:
          description: Nom d'utilisateur fourni invalide
        404:
          description: Utilisateur introuvable
    post:
      tags:
      - film
      summary: Ajouter un film
      operationId: filmPost
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Film'
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - write:addfilm
  /film/{idFilm}:
    get:
      tags:
      - film
      summary: Récuperer les informations du film
      operationId: filmGet
      parameters:
      - name: idFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Film'
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Titre de série film invalide
        404:
          description: Film introuvable
    put:
      tags:
      - film
      summary: Modifier un film
      operationId: filmPut
      parameters:
      - name: idFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Film'
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - put:putfilm
    delete:
      tags:
      - film
      summary: Supprimer le film
      operationId: filmDelete
      parameters:
      - name: idFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - delete:deletefilm
  /film/details:
    get:
      tags:
      - film
      summary: Liste les détails de tout les films
      operationId: filmsDetailsGet
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: "Nombre d'éléments à ignorer avant de commencer à collecter l'ensemble de résultats."
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: Le nombre de film à retourner.
      responses:
        200:
          description: Opération réussi
        400:
          description: Nom d'utilisateur fourni invalide
        404:
          description: Utilisateur introuvable
    post:
      tags:
      - film
      summary: Ajouter les détails de film
      operationId: filmsDetailPost
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/DetailsFilm'
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsFilm'
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - write:adddetailsfilm
  /film/details/{idFilm}:
    get:
      tags:
      - film
      summary: Récuperer tout les détails d'un film
      operationId: filmDetailGet
      parameters:
      - name: idFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/DetailsFilm'
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsFilm'
        400:
          description: Titre de série film invalide
        404:
          description: Film introuvable
    put:
      tags:
      - film
      summary: Modifier tout les détails d'un film
      operationId: filmDetailPut
      parameters:
      - name: idFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/DetailsFilm'
            application/json:
              schema:
                $ref: '#/components/schemas/DetailsFilm'
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - put:putdetailsfilm
    delete:
      tags:
      - film
      summary: Supprimer tout les détails d'un film
      operationId: filmDetailDelete
      parameters:
      - name: idFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - delete:deletedetailsfilm
  /location:
    get:
      tags:
      - location d'un film
      summary: Liste des films en location
      operationId: locationGet
      parameters:
        - in: query
          name: offset
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: "Nombre d'éléments à ignorer avant de commencer à collecter l'ensemble de résultats."
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          required: false
          description: Le nombre de film à retourner.
      responses:
        200:
          description: Opération réussi
        400:
          description: Nom d'utilisateur fourni invalide
        404:
          description: Utilisateur introuvable
    post:
      tags:
      - location d'un film
      summary: Ajouter un film en location
      operationId: locationPost
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Location'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - add:addlocation
  /location/{idLocationFilm}:
    get:
      tags:
      - location d'un film
      summary: Récupère les informations sur la location d'un film
      operationId: locationFilmGet
      parameters:
      - name: idLocationFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Location'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400:
          description: Titre de série film invalide
        404:
          description: Film introuvable
    put:
      tags:
      - location d'un film
      summary: Modifier la location d'un film
      operationId: locationFilmPut
      parameters:
      - name: idLocationFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Location'
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - put:putlocation
    delete:
      tags:
      - location d'un film
      summary: Supprimer la location d'un film
      operationId: locationFilmDelete
      parameters:
      - name: idLocationFilm
        in: path
        description: 'Le titre qui doit être récupéré. Utilisez title1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
        400:
          description: Titre de film fourni invalide
        404:
          description: Film introuvable
      security:
        - user_auth:
          - delete:deletelocation
  /user:
    post:
      tags:
      - user
      summary: Création d'un utilisateur
      description: Cette opération doit être effectué en étant connecté.
      operationId: createUser
      requestBody:
        description: Création d'un objet utilisateur
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        default:
          description: Opération réussi
          content: {}
      x-codegen-request-body-name: body
  /user/login:
    get:
      tags:
      - user
      summary: Connexion d'un utilisateur
      operationId: loginUser
      parameters:
      - name: username
        in: query
        description: Le nom d'utilisateur pour se connecter
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: Le mot de passe lié à l'utilisateur précedemment renseigné
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          headers:
            X-Rate-Limit:
              description: Nombre de tentative autorisé par heure pour un utilisateur
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: Date à laquelle le Token expire
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        400:
          description: Nom d'utilisateur ou mot de passe invalide
  /user/logout:
    get:
      tags:
      - user
      summary: Déconnexion de l'utilisateur actuellement connecté
      operationId: logoutUser
      responses:
        default:
          description: Opération réussi
      security:
        - user_auth:
          - write:logout
  /user/{idUser}:
    get:
      tags:
      - user
      summary: Récuperer un utilisateur par son nom d'utilisateur
      operationId: getUser
      parameters:
      - name: idUser
        in: path
        description: 'Le nom qui doit être récupéré. Utilisez user1 pour les tests.'
        required: true
        schema:
          type: string
      responses:
        200:
          description: Opération réussi
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Nom d'utiliisateur fourni invalide
        404:
          description: Utilisateur introuvable
    put:
      tags:
      - user
      summary: Mise à jour d'un utilisateur
      description: Cette opération doit être effectué en étant connecté à l'utilisateur qui est sujet à modification.
      operationId: updateUser
      parameters:
      - name: idUser
        in: path
        description: La valeur par laquelle on remplace le nom d'utilisateur
        required: true
        schema:
          type: string
      requestBody:
        description: Mise à jour de l'objet utilisateur
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        400:
          description: L'objet user est invalide
        404:
          description: Utilisateur introuvable
      x-codegen-request-body-name: body
      security:
        - user_auth:
          - write:editprofile
    delete:
      tags:
      - user
      summary: Suppression d'un utilisateur
      description: Cette opération doit être effectué en étant connecté à l'utilisateur qui est sujet à suppression.
      operationId: deleteUser
      parameters:
      - name: idUser
        in: path
        description: Le nom d'utilisateur qui doit être supprimé
        required: true
        schema:
          type: string
      responses:
        400:
          description: Le nom d'utilisateur est invalide
        404:
          description: Utilisateur introuvable
      security:
        - user_auth:
          - delete:account
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      xml:
        name: User
    Film:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nomFilm:
          type: string
        descriptionFilm:
          type: string
        prixFilm:
          type: number
          minimum: 1
          maximum: 500
    DetailsFilm:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nomFilm:
          type: string
        descriptionFilm:
          type: string
        prixFilm:
          type: number
          minimum: 1
          maximum: 500
    Location:
      type: object
      properties:
        id:
          type: integer
          format: int64
        nomFilm:
          type: string
        nomClient:
          type: string
  securitySchemes:
    user_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://bunga.tv/oauth/dialog
          scopes:
            write:addfilm: Ajouter un film
            put:putfilm: Modifier un film
            delete:deletefilm: Supprimer un film
            write:adddetailsfilm: Ajouter des détails d'un film
            put:putdetailsfilm: Modifier des details d'un film
            delete:deletedetailsfilm: Supprimer des détails d'un film
            write:addlocation: Ajouter un film en location
            put:putlocation: Modifier un film en location
            delete:deletelocation: Ajouter un film en location
            write:editprofile: Edition du profil
            delete:account: Suppression de son compte
            write:logout: Déconnexion du compte
